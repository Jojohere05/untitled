#include <stdio.h>
#include <stdlib.h>

// Node structure for singly linked list
struct Node {
    int data;
    struct Node* next;
};

// Function to create a new node
struct Node* createNode(int data) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->next = NULL;
    return newNode;
}

// Function to insert a node at the end of the list
void insert(struct Node** head, int data) {
    struct Node* newNode = createNode(data);
    if (*head == NULL) {
        *head = newNode; // If the list is empty, the new node becomes the head
    } else {
        struct Node* temp = *head;
        while (temp->next != NULL) {
            temp = temp->next; // Traverse to the last node
        }
        temp->next = newNode; // Insert the new node at the end
    }
}

// Function to delete a node by value
void deleteNode(struct Node** head, int data) {
    if (*head == NULL) {
        printf("List is empty.\n");
        return;
    }

    struct Node* temp = *head;

    // If the node to be deleted is the head
    if (temp->data == data) {
        *head = temp->next; // Update head
        free(temp); // Free the memory
        printf("Node with data %d deleted.\n", data);
        return;
    }

    struct Node* prev = NULL;

    // Traverse the list to find the node to delete
    while (temp != NULL && temp->data != data) {
        prev = temp;
        temp = temp->next;
    }

    if (temp == NULL) {
        printf("Node with data %d not found.\n", data);
        return;
    }

    prev->next = temp->next; // Unlink the node from the list
    free(temp); // Free the memory
    printf("Node with data %d deleted.\n", data);
}

// Function to display the list
void display(struct Node* head) {
    if (head == NULL) {
        printf("List is empty.\n");
        return;
    }
    struct Node* temp = head;
    printf("List: ");
    while (temp != NULL) {
        printf("%d -> ", temp->data);
        temp = temp->next;
    }
    printf("NULL\n");
}

// Main function with menu
int main() {
    struct Node* list = NULL; // Initially the list is empty
    int choice, data;

    while (1) {
        printf("\nMenu:\n");
        printf("1. Create new list\n");
        printf("2. Insert into list\n");
        printf("3. Delete from list\n");
        printf("4. Display list\n");
        printf("5. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                // Reset the list
                list = NULL;
                printf("New list created.\n");
                break;
            case 2:
                printf("Enter data to insert: ");
                scanf("%d", &data);
                insert(&list, data);
                printf("Inserted %d into the list.\n", data);
                break;
            case 3:
                printf("Enter data to delete: ");
                scanf("%d", &data);
                deleteNode(&list, data);
                break;
            case 4:
                display(list);
                break;
            case 5:
                exit(0);
            default:
                printf("Invalid choice. Try again.\n");
        }
    }

    return 0;
}
